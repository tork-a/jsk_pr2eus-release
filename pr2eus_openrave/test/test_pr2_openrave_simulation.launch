<launch>
  <include file="$(find pr2eus_openrave)/launch/pr2_openrave_simulation.launch" >
    <arg name="COLLISION_MAP_WAIT_TIME" value="20"/>
  </include>
  <node type="rviz" pkg="rviz" name="rviz_pr2_openrave"
  	args="-sync -d $(find pr2eus_openrave)/test/test_pr2eus_openrave.vcg"
  	launch-prefix='glc-capture --start --out=$(find pr2eus_openrave)/build/rviz_pr2_openrave.glc' />

  <sphinxdoc><![CDATA[
roseus + openrave example.

.. video:: build/rviz_pr2_openrave
  :width: 400

  ]]></sphinxdoc>

  <test name="pr2eus_openrave_eus" pkg="roseus" type="roseus"
	args="$(find pr2eus_openrave)/test/pr2_openrave_simulation.l"
	test-name="pr2_openrave_simulation" time-limit="3000"/>
  <!-- we assume test code is invoked in alphabet order of test-name -->
  <test type="glc_encode.sh" pkg="jsk_tools" test-name="z_pr2_openrave_encode" args="$(find pr2eus_openrave)/build/rviz_pr2_openrave.glc" time-limit="3000"/>
  <param name="use_sim_time" value="true"/>
  <node pkg="rosbag" type="play" name="rosbag_play_collision_map"
	args="$(find pr2eus_openrave)/test/collision_map.bag --clock -d 5"/>
  <node pkg="tf" type="static_transform_publisher" name="base_to_kinect"
	args="0.130 0.016 1.338 -1.977 0.000 -1.487 /base_link /openni_rgb_optical_frame 100"/>

  <!-- rosrun rosdoc rosdoc pr2eus_openrave to generate codes -->
</launch>
